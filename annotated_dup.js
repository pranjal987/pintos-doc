var annotated_dup =
[
    [ "arc4", "structarc4.html", "structarc4" ],
    [ "arena", "structarena.html", "structarena" ],
    [ "ata_disk", "structata__disk.html", "structata__disk" ],
    [ "bitmap", "structbitmap.html", "structbitmap" ],
    [ "block", "structblock.html", "structblock" ],
    [ "block_operations", "structblock__operations.html", "structblock__operations" ],
    [ "channel", "structchannel.html", "structchannel" ],
    [ "condition", "structcondition.html", "structcondition" ],
    [ "desc", "structdesc.html", "structdesc" ],
    [ "dir", "structdir.html", "structdir" ],
    [ "dir_entry", "structdir__entry.html", "structdir__entry" ],
    [ "Elf32_Ehdr", "struct_elf32___ehdr.html", "struct_elf32___ehdr" ],
    [ "Elf32_Phdr", "struct_elf32___phdr.html", "struct_elf32___phdr" ],
    [ "file", "structfile.html", "structfile" ],
    [ "hash", "structhash.html", "structhash" ],
    [ "hash_elem", "structhash__elem.html", "structhash__elem" ],
    [ "hash_iterator", "structhash__iterator.html", "structhash__iterator" ],
    [ "inode", "structinode.html", "structinode" ],
    [ "inode_disk", "structinode__disk.html", "structinode__disk" ],
    [ "integer_base", "structinteger__base.html", "structinteger__base" ],
    [ "intq", "structintq.html", "structintq" ],
    [ "intr_frame", "structintr__frame.html", "structintr__frame" ],
    [ "kernel_thread_frame", "structkernel__thread__frame.html", "structkernel__thread__frame" ],
    [ "keymap", "structkeymap.html", "structkeymap" ],
    [ "list", "structlist.html", "structlist" ],
    [ "list_elem", "structlist__elem.html", "structlist__elem" ],
    [ "lock", "structlock.html", "structlock" ],
    [ "lock_and_sema", "structlock__and__sema.html", "structlock__and__sema" ],
    [ "lock_pair", "structlock__pair.html", "structlock__pair" ],
    [ "locks", "structlocks.html", "structlocks" ],
    [ "partition", "structpartition.html", "structpartition" ],
    [ "pool", "structpool.html", "structpool" ],
    [ "printf_conversion", "structprintf__conversion.html", "structprintf__conversion" ],
    [ "semaphore", "structsemaphore.html", "structsemaphore" ],
    [ "semaphore_elem", "structsemaphore__elem.html", "structsemaphore__elem" ],
    [ "simple_thread_data", "structsimple__thread__data.html", "structsimple__thread__data" ],
    [ "sleep_test", "structsleep__test.html", "structsleep__test" ],
    [ "sleep_thread", "structsleep__thread.html", "structsleep__thread" ],
    [ "switch_entry_frame", "structswitch__entry__frame.html", "structswitch__entry__frame" ],
    [ "switch_threads_frame", "structswitch__threads__frame.html", "structswitch__threads__frame" ],
    [ "test", "structtest.html", "structtest" ],
    [ "thread", "structthread.html", "structthread" ],
    [ "thread_info", "structthread__info.html", "structthread__info" ],
    [ "tss", "structtss.html", "structtss" ],
    [ "ustar_header", "structustar__header.html", "structustar__header" ],
    [ "value", "structvalue.html", "structvalue" ],
    [ "vhprintf_aux", "structvhprintf__aux.html", "structvhprintf__aux" ],
    [ "vsnprintf_aux", "structvsnprintf__aux.html", "structvsnprintf__aux" ]
];